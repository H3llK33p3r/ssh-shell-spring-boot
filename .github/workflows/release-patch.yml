name: Release

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of release (patch, minor, major)'
        required: false
        default: 'patch'
jobs:
  release:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
        
    - name: Get maven version
      id: version
      run: |
        export version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        export version=$(echo "${version%%-*}")
        echo "::set-output name=version::$(echo $version)"
    - name: Print current version 
      run: echo "Current version = ${{ steps.version.outputs.version }}"
    - name: 'Get next minor version'
      id: next
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.version.outputs.version }}
    - name: Choose next version 
      id: choose
      run: |
        if [[ ${{ github.event.inputs.type }} == "major" ]] ; then export next=${{ steps.next.outputs.major }}; elif [[ ${{ github.event.inputs.type }} == "minor" ]] ; then export next=${{ steps.next.outputs.minor }}; else export next=${{ steps.next.outputs.patch }}; fi
        echo "::set-output name=next::$(echo $next)"
    - name: 'Get next snapshot version'
      id: snapshot
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.choose.outputs.next }}  
    - name: Set release and snapshot versions 
      id: versions
      run: |
        echo "::set-output name=snapshot::$(echo ${{ steps.snapshot.outputs.patch }}-SNAPSHOT)"
        echo "::set-output name=release::$(echo ${{ steps.choose.outputs.next }})"
    - name: Log versions
      run: echo "Releasing version ${{ steps.versions.outputs.release }}, new dev version will be ${{ steps.versions.outputs.snapshot }}"
    - name: Release
      run: mvn -B -ntp release:prepare release:clean -DreleaseVersion=${{ steps.versions.outputs.release }} -DdevelopmentVersion=${{ steps.versions.outputs.snapshot }}
      
      
      
